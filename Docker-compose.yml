version: "3.8"

services:
  bot:
    build: .
    restart: always
    env_file: .env
    volumes:
      - ./:/app
    depends_on:
      - mongo
      - redis
      - minio
      - postgres
    command: ["python", "bot.py"]

  webhook:
    build: .
    restart: always
    env_file: .env
    volumes:
      - ./:/app
    ports:
      - "8080:8080"
    command: ["uvicorn", "webhook.server:app", "--host", "0.0.0.0", "--port", "8080"]
    depends_on:
      - mongo
      - postgres

  adminapi:
    build: .
    restart: always
    env_file: .env
    volumes:
      - ./:/app
    ports:
      - "8081:80"
    command: ["uvicorn", "web.admin_api:app", "--host", "0.0.0.0", "--port", "80"]
    depends_on:
      - mongo
      - postgres

  worker:
    build: .
    restart: always
    env_file: .env
    volumes:
      - ./:/app
    command: ["celery", "-A", "worker.celery_app.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
    depends_on:
      - redis
      - mongo
      - minio
      - postgres

  mongo:
    image: mongo:6.0
    restart: always
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: smartx
      POSTGRES_PASSWORD: smartx_pass
      POSTGRES_DB: smartx_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    restart: always
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data

volumes:
  mongo_data:
  minio_data:
  postgres_data:
