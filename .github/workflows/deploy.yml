name: Universal Deployment

on:
  workflow_dispatch:   # manually trigger bhi kar sakte ho
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # =========================
      # Deploy to Heroku (only if creds exist)
      # =========================
      - name: Deploy to Heroku
        if: ${{ secrets.HEROKU_API_KEY != '' }}
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

      # =========================
      # Deploy to Render
      # =========================
      - name: Deploy to Render
        if: ${{ secrets.RENDER_DEPLOY_HOOK != '' }}
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

      # =========================
      # Deploy to AWS Elastic Beanstalk
      # =========================
      - name: Deploy to AWS
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ENV_NAME: ${{ secrets.AWS_ENV_NAME }}
        run: |
          zip -r app.zip .
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION
          aws s3 cp app.zip s3://$AWS_S3_BUCKET/app-${{ github.run_id }}.zip
          aws elasticbeanstalk create-application-version \
            --application-name SmartXBot \
            --version-label v-${{ github.run_id }} \
            --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=app-${{ github.run_id }}.zip
          aws elasticbeanstalk update-environment \
            --application-name SmartXBot \
            --environment-name $AWS_ENV_NAME \
            --version-label v-${{ github.run_id }}

      # =========================
      # Deploy with Docker
      # =========================
      - name: Build & Push Docker Image
        if: ${{ secrets.DOCKER_USERNAME != '' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
        run: |
          docker build -t smartx-bot .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag smartx-bot $DOCKER_REPO:latest
          docker push $DOCKER_REPO:latest
